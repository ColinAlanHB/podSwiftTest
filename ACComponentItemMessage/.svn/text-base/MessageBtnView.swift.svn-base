//
//  MessageBtnView.swift
//  ACComponentItemMessage
//
//  Created by 沈移动 on 2018/8/20.
//  Copyright © 2018年 bigapp. All rights reserved.
//

import Foundation
import SnapKit
import WZLBadge
import ACRouterKit
import ACComponentItemLib

/// 消息按钮视图
class MessageBtnView: ComponentBaseView {
    
    lazy var messageBtn : UIButton = {
        
        let view: UIButton = UIButton()
        view.frame = CGRect(x: 0, y: 0, width: 40, height: 40)
        view.setImage(UIImage(named:"msg_white"), for: .normal)
//        view.imageEdgeInsets = UIEdgeInsets.init(top: 0, left: 10, bottom: 0, right: -10)
        view.imageView?.layer.masksToBounds = false
//        view.badgeCenterOffset = CGPoint.init(x: -8, y: 8)
        view.addTarget(self, action: #selector(openMessageAction(_:)), for: .touchUpInside)
        view.clearBadge()
        
        return view
    }()
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        
        // 登录
        noticeDefault.addObserver(self, selector: #selector(initData), name: INNONotificationTypes.K_LOGIN_SUCCESS_NOTIFICATION, object: nil)
        
        // 退出登录
        noticeDefault.addObserver(self, selector: #selector(initData), name: INNONotificationTypes.K_LOGOUT_SUCCESS_NOTIFICATION, object: nil)
        
        /// 刷新消息数
        noticeDefault.addObserver(self, selector: #selector(refreshMsgCount), name: INNONotificationTypes.K_MSG_COUNT_REFRESH, object: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    /// 打开消息
    ///
    /// - Parameter btn: <#btn description#>
    @objc fileprivate func openMessageAction(_ btn: UIButton) {
        
        ACRouter.route().openURL("ACComponentLogin://loginWithBlock") { (code, message, params) in
            let vc = MessageViewController()
//            self.target?.openWindow(vc, isLogin: true)
            (INNOBaseViewControllerHelper.instance.currentViewController() as? INNOBaseViewController)?.openWindow(vc, isLogin: true)
        }
        
    }
    
    /// 刷新消息数
    @objc fileprivate func refreshMsgCount() {
        
        let count = INNOPushHelper.instance.getMsgCountSum()
        if count > 0 {
            messageBtn.showBadge(with: .number, value: count, animationType: .none)
        } else {
            messageBtn.clearBadge()
        }
        
    }
    
}

extension MessageBtnView {
    
    @objc func initView() {
        
        self.addSubview(messageBtn)
        messageBtn.snp.makeConstraints { (make) in
            make.edges.equalTo(self)
        }
        
    }
    
    @objc func initData() {
        
        /// 获取消息未读数
        INNOPushHelper.instance.initMsgCount()
        
    }
    
}
