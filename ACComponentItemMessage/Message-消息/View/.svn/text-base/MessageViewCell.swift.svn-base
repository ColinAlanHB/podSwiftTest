//
//  MessageViewCell.swift
//  citizencloud
//
//  Created by 沈移动 on 2018/4/10.
//  Copyright © 2018年 linewell. All rights reserved.
//

import Foundation
import SnapKit
import ACComponentItemLib

// MARK:- 消息列表
class MessageViewCell : UITableViewCell {
    
    var model: MessageListDTO? {
        didSet{
            
            // 封面
            if let url = model?.thirdSystemIconUrl {
                let url = URL(string: url)
                appLogo.sd_setImage(with: url, placeholderImage: DEFAULT_BG_1_1)
            } else {
                appLogo.image = G_APP_ICON_IMAGE
            }
            
            // 名称
            appNameLabel.text = model?.thirdSystemName ?? "小秘书"
            
            // 内容
            tipLabel.text = model?.summary ?? "暂未收到新的消息提醒"
            
            // 时间
            timeLabel.text = model?.showTimeStr
            
            // 消息数量
            let numberCount = model?.unReadCount ?? 0
            if numberCount == 0 {
                countLabel.isHidden = true
                
                countLabel.snp.updateConstraints { (make) in
                    make.width.equalTo(0)
                }
            } else {
                countLabel.isHidden = false
                
                if numberCount < 10 {
                    countLabel.text = "\(numberCount)"
                    countLabel.snp.updateConstraints { (make) in
                        make.width.equalTo(20)
                    }
                } else if numberCount <= 99 {
                    countLabel.text = "\(numberCount)"
                    countLabel.snp.updateConstraints { (make) in
                        make.width.equalTo(25)
                    }
                } else {
                    countLabel.text = "99+"
                    countLabel.snp.updateConstraints { (make) in
                        make.width.equalTo(30)
                    }
                }
                
            }
            
        }
    }
    
    /// 图标
    lazy var appLogo : UIImageView = {
        let view = UIImageView()
        view.layer.cornerRadius = 3
        view.layer.masksToBounds = true
        view.image = G_APP_ICON_IMAGE
        return view
    }()
    
    /// 名称
    lazy var appNameLabel : UILabel = {
        let view = UILabel()
        view.textColor = RGBA(r: 20, g: 20, b: 20, a: 1)
        view.font = INNOSystemFont(ofSize: 18)
        return view
    }()
    
    /// 提示信息
    lazy var tipLabel : UILabel = {
        let view = UILabel()
        view.textColor = RGBA(r: 102, g: 102, b: 102, a: 1)
        view.font = INNOSystemFont(ofSize: 12)
        return view
    }()
    
    /// 时间
    lazy var timeLabel : UILabel = {
        let view = UILabel()
        view.textColor = RGBA(r: 153, g: 153, b: 153, a: 1)
        view.font = INNOSystemFont(ofSize: 11)
        view.textAlignment = .right
        return view
    }()
    
    /// 消息数量
    lazy var countLabel : UILabel = {
        let view = UILabel()
        view.backgroundColor = RGBA(r: 255, g: 59, b: 48, a: 1)
        view.layer.masksToBounds = true
        view.layer.cornerRadius = 10
        view.font = INNOSystemFont(ofSize: 13)
        view.textColor = RGBA(r: 255, g: 255, b: 255, a: 1)
        view.textAlignment = .center
        return view
    }()
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }
    
    override init(style: UITableViewCellStyle, reuseIdentifier: String?) {
        super.init(style: style, reuseIdentifier: reuseIdentifier)
        self.setupView()
        
    }
    
    /// 设置约束
    fileprivate func setupView(){
        
        self.contentView.addSubview(appLogo)
        appLogo.snp.makeConstraints { (make) in
            make.width.height.equalTo(widthForiphone6Scale(51))
            make.left.equalTo(12)
            make.centerY.equalTo(self.contentView)
        }
        
        self.contentView.addSubview(appNameLabel)
        appNameLabel.snp.makeConstraints { (make) in
            make.top.equalTo(16)
            make.left.equalTo(appLogo.snp.right).offset(12)
        }
        
        self.contentView.addSubview(timeLabel)
        timeLabel.snp.makeConstraints { (make) in
            make.top.equalTo(18)
            make.right.equalTo(-12)
            make.left.equalTo(appNameLabel.snp.right).offset(12)
        }
        
        self.contentView.addSubview(countLabel)
        countLabel.snp.makeConstraints { (make) in
            make.right.equalTo(timeLabel)
            make.bottom.equalTo(-12)
            make.width.equalTo(0)
            make.height.equalTo(20)
        }
        
        self.contentView.addSubview(tipLabel)
        tipLabel.snp.makeConstraints { (make) in
            make.left.equalTo(appNameLabel)
            make.right.equalTo(countLabel.snp.left).offset(-8)
            make.top.equalTo(appNameLabel.snp.bottom).offset(8)
            make.bottom.equalTo(-16)
        }
        
    }
    
}
