//
//  MessageViewController.swift
//  citizencloud
//
//  Created by 沈移动 on 2018/4/10.
//  Copyright © 2018年 linewell. All rights reserved.
//

import Foundation
import ACComponentItemLib

/// 消息
class MessageViewController : INNOBaseViewController {
    
    fileprivate let cellId = "CellId"
    
    // 数据源
    fileprivate var datalist: [MessageListDTO] = []
    
    /// 通知tableview
    fileprivate lazy var tableView : INNOUITableView = {
        let view = INNOUITableView(frame: CGRect(x: 0, y: navBarBottom(), width: screenWidth(), height: pageHeight()), style: .grouped)
        view.delegate = self
        view.dataSource = self
        view.backgroundColor = DEFAULT_BACKGROUND_CLR
        view.separatorInset = UIEdgeInsetsMake(0, 0, 0, 0)
        view.estimatedRowHeight = 80
        view.register(MessageViewCell.self, forCellReuseIdentifier: cellId)
        view.innoDelegate = self
        return view
    }()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // 初始化导航栏
        self.initNavBar(delegate: self)
        
        // 初始化视图
        self.initView()
        
        /// 刷新消息数
        noticeDefault.addObserver(self, selector: #selector(refreshMsgCount), name: INNONotificationTypes.K_MSG_COUNT_REFRESH, object: nil)
    }
    
    deinit {
        noticeDefault.removeObserver(self)
    }
}

// MARK: - <#Description#>
extension MessageViewController {
    
    /// 初始化视图
    fileprivate func initView() {
        
        self.view.addSubview(tableView)
        
        // 顶部刷新
        let header = INNOMJRefreshGifHeader()
        header.setRefreshingTarget(self, refreshingAction: #selector(self.headerRefresh))
        self.tableView.mj_header = header
        
        self.datalist = INNOPushHelper.instance.getMsgList()
        self.tableView.reloadDataWithEmptyView()
    }
    
    /// 刷新消息数
    @objc fileprivate func refreshMsgCount() {
        
        // 要异步线程执行，不然会造成同时访问
        DispatchQueue.global().async {
            
            self.tableView.mj_header.endRefreshing()
            self.datalist = INNOPushHelper.instance.getMsgList()
            
            // 主线程刷新列表
            DispatchQueue.main.async {
                self.tableView.reloadDataWithEmptyView()
            }
            
        }
    }
    
    /// 下拉刷新
    @objc fileprivate func headerRefresh() {
        
        // 重新加载消息数
        INNOPushHelper.instance.initMsgCount()
        
        // 模拟2秒后结束刷新
        DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + 2) {
            self.tableView.mj_header.endRefreshing()
        }
        
    }
    
}

// MARK: - <#UITableViewDelegate, UITableViewDataSource#>
extension MessageViewController : UITableViewDelegate, UITableViewDataSource, INNOUITableViewDelegate {
    
    /// section数量
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    /// 行数
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        
        return datalist.count
    }
    
    /// 绘制cell
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: cellId) as! MessageViewCell
        cell.selectionStyle = .none
        cell.model = self.datalist[indexPath.row]
        
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        let cell = tableView.cellForRow(at: indexPath) as? MessageViewCell
        let model = cell?.model
        let vc = MessageListViewController()
        vc.title = model?.thirdSystemName ?? "小秘书"
        vc.id = model?.thirdSystemId
        self.openWindow(vc, isLogin: true)
        
        INNOPushHelper.instance.reduceMsgCount(model?.thirdSystemId, count: nil)
        
    }
    
    /// 头部高度
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return 0.01
    }
    
    func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -> CGFloat {
        return 0.01
    }
    
    func emptyDataView(_ view: UIScrollView?) -> UIView {
        
        let view = INNOEmptyView(frame: tableView.bounds, title: "暂未收到任何消息！", buttonName: nil)
        
        return view
    }
    
}

// MARK:- 导航栏代理
extension MessageViewController : INNONavigationControllerDelegate {
    
    /// 初始化导航栏
    ///
    /// - Parameter controller: <#controller description#>
    func initNavBar(_ controller: INNOBaseViewController) {
//        self._showBackBtn = false
        self.navigationItem.title = "消息"
        navBarShadowImageHidden = false
    }
}
